VERSION = "3"
local function string(o)
    return '"' .. tostring(o) .. '"'
end

local function recurse(o, indent)
    if indent == nil then indent = '' end
    local indent2 = indent .. '  '
    if type(o) == 'table' then
        local s = indent .. '{' .. '\n'
        local first = true
        for k,v in pairs(o) do
            if first == false then s = s .. ', \n' end
            if type(k) ~= 'number' then k = string(k) end
            s = s .. indent2 .. '[' .. k .. '] = ' .. recurse(v, indent2)
            first = false
        end
        return s .. '\n' .. indent .. '}'
    else
        return string(o)
    end
end

local function var_dump(...)
    local args = {...}
    if #args > 1 then
        var_dump(args)
    else
        print(recurse(args[1]))
    end
end
----#Bibak
DataBase = (loadfile "Redis.lua")()
-----------------------------
DataBase = DataBase.connect('127.0.0.1', 6379)
-----------------------------
-----------------------------
local BOT =  debug.getinfo(2, "S").source:sub(2):match("Tabchi%_(%d+)%.lua")
-----------------------------
local channel_id = "not set!"--DataBase:get('bibak'..BOT..'channel_id')--CHANNEL-USERID
local channel_user = "not set!"--DataBase:get('bibak'..BOT..'channel_uname')--CHANNEL-USERNAME
--------------------------------------
function dl_cb(arg, data)
end
function Check_Info ()
	if DataBase:scard('bibak'..BOT..'admin') == 0 then
		local admin = tonumber(DataBase:get('bibak'..BOT..'superadmin'))
		DataBase:del("bibak"..BOT.."admin")
    	DataBase:sadd("bibak"..BOT.."admin", admin)
    	print("\n\27[36m     Admin ID |\27[32m ".. admin .." \27[36m| شناسه ادمین")
	end
end
-----------------------------
function get_bot (i, bibak)
	function bot_info (i, bibak)
		DataBase:set("bibak"..BOT.."id",bibak.id)
		if bibak.first_name then
			DataBase:set("bibak"..BOT.."fname",bibak.first_name)
		end
		if bibak.last_name then
			DataBase:set("bibak"..BOT.."lanme",bibak.last_name)
		end
		DataBase:set("bibak"..BOT.."num",bibak.phone_number)
		return bibak.id
	end
	tdbot_function ({["@type"] = "getMe",}, bot_info, nil)
end
-----------------------------
function is_bibak(msg)
    local var = false
	local hash = 'bibak'..BOT..'admin'
	local user = msg.sender_user_id
    local Bibak = DataBase:sismember(hash, user)
	if Bibak then
		var = true
	end
	return var
end
-----------------------------
function writefile(filename, input)
	local file = io.open(filename, "w")
	file:write(input)
	file:flush()
	file:close()
	return true
end
-----------------------------
function process_join(i, bibak)
	if bibak.code == 429 then
		local message = tostring(bibak.message)
		local Time = message:match('%d+') + 85
		DataBase:setex("bibak"..BOT.."maxjoin", tonumber(Time), true)
	else
		DataBase:srem("bibak"..BOT.."goodlinks", i.link)
		DataBase:sadd("bibak"..BOT.."savedlinks", i.link)
	end
end
function allready_gp(id)
	local i, t, popen = 0, {}, io.popen
    local pfile = popen('ls -a "'..directory..'"')
    for filename in pfile:lines() do
		local tabchi_number = filename:match("Tabchi_(%d+).lua")
		if tabchi_number and DataBase:sismember("bibak"..BOT.."all", tabchi_number) then
			return true
		end
    end
    pfile:close()
	return false
end
function process_link(i, bibak)
	if (bibak.type and (bibak.type["@type"] == "chatTypeGroup" or (bibak.type["@type"] == "chatTypeSupergroup") and not bibak.type.is_channel)) then
	DataBase:srem("bibak"..BOT.."waitelinks", i.link)
		DataBase:sadd("bibak"..BOT.."goodlinks", i.link)
	elseif bibak.code == 429 then
		local message = tostring(bibak.message)
		local Time = message:match('%d+') + 85
		DataBase:setex("bibak"..BOT.."maxlink", tonumber(Time), true)
	else
DataBase:srem("bibak"..BOT.."waitelinks", i.link)
	end
end
function find_link(text)
	if text:match("https://telegram.me/joinchat/%S+") or text:match("https://t.me/joinchat/%S+") or text:match("https://telegram.dog/joinchat/%S+") then
		local text = text:gsub("t.me", "telegram.me")
		local text = text:gsub("telegram.dog", "telegram.me")
		for link in text:gmatch("(https://telegram.me/joinchat/%S+)") do
			if not DataBase:sismember("bibak"..BOT.."alllinks", link) then
				DataBase:sadd("bibak"..BOT.."waitelinks", link)
				DataBase:sadd("bibak"..BOT.."alllinks", link)
			end
		end
	end
end
-----------------------------
function add(id)
	local Id = tostring(id)
	if not DataBase:sismember("bibak"..BOT.."all", id) then
		function chat_cb(kir, data)
			local chat_type = not data.type.is_channel and data.type["@type"] or "chatTypeChannel"
			local id = data.id
			if chat_type == "chatTypeBasicGroup" then
				DataBase:sadd("bibak"..BOT.."all", id)
				DataBase:sadd("bibak"..BOT.."groups", id)
			elseif chat_type == "chatTypeSupergroup" then
				DataBase:sadd("bibak"..BOT.."all", id)
				DataBase:sadd("bibak"..BOT.."supergroups", id)
			elseif chat_type == "chatTypePrivate" then
				DataBase:sadd("bibak"..BOT.."all", id)
				DataBase:sadd("bibak"..BOT.."users", id)
			elseif chat_type == "chatTypeChannel" then
				DataBase:sadd("bibak"..BOT.."all", id)
				DataBase:sadd("bibak"..BOT.."channels", id)
			end
		end
		tdbot_function ({
		["@type"] = "getChat",
		chat_id = id,
		}, chat_cb, nil)
	end
	return true
end
function rem(id)
	DataBase:srem("bibak"..BOT.."all", id)
	DataBase:srem("bibak"..BOT.."users", id)
	DataBase:srem("bibak"..BOT.."supergroups", id)
	DataBase:srem("bibak"..BOT.."groups", id)
	return true
end
function test_cb(test_extra, test_data)
	var_dump(test_data)
end
-----------------------------
function SendMsg(chat_id, msg_id, text)
  function ret_parsed(error, parsed_text)
  tdbot_function ({
    ["@type"] = "sendChatAction",
    chat_id = chat_id,
    action = {
     ["@type"] = "chatActionTyping",
    }
  }, dl_cb, nil)
 tdbot_function ({
  ["@type"] = "sendMessage",
  chat_id = chat_id,
  reply_to_message_id = msg_id,
  disable_notification = true,
  from_background = true,
  reply_markup = nil,
  input_message_content = {
   ["@type"] = "inputMessageText",
   text= {["@type"]="formattedText", text = parsed_text.text, entities = {}},
   disable_web_page_preview = true,
   clear_draft = false
  },
 }, dl_cb, nil)
 end
 tdbot_function({["@type"] = "parseTextEntities", text = text, parse_mode = {["@type"]= "textParseModeHTML"}}, ret_parsed, nil)
end
function reset_status()
	function chats_cb(kir, data)
		for i, v in pairs(data.chat_ids) do
			add(v)
		end
	end
	function contacts_cb(kir, data)
		for i, v in pairs(data.user_ids) do
			DataBase:sadd("bibak"..BOT.."contacts", v)
		end
	end
	DataBase:del("bibak"..BOT.."all")
	DataBase:del("bibak"..BOT.."users")
	DataBase:del("bibak"..BOT.."groups")
	DataBase:del("bibak"..BOT.."supergroups")
	DataBase:del("bibak"..BOT.."contacts")
	tdbot_function ({
	["@type"] = "getChats",
	offset_order = "9223372036854775807",
	offset_chat_id = 0,
	limit = "999999"
	}, chats_cb, nil)
	tdbot_function ({
	["@type"] = "searchContacts",
	query = "",
	limit = "999999"
	}, contacts_cb, nil)
end
-----------------------------
Check_Info()
function OffExpire(msg, data)
  print("\n\27[36m>>\27[32m Tabchi Onlined Now ! \27[36m<<\27")
	SendMsg(msg.chat_id, msg.id, "<i>⇜ زمان خاموشی به اتمام رسید و ربات روشن شد ! :)</i>")
end
function Clean(extra, data)
	io.popen("./clean "..BOT):close()
	tdbot_function ({
	["@type"] = "setAlarm",
	seconds = 1800
	}, Clean, nil)
end
-----------------------------
function tdbot_update_callback(data)
	if data["@type"] == "updateOption" and data.name == "my_id" then
		reset_status()
		tdbot_function ({
		["@type"] = "setAlarm",
		seconds = 1800
		}, Clean, nil)
		local bot_id = DataBase:get("bibak"..BOT.."id") or get_bot()
	elseif data["@type"] == "updateNewMessage" then
		if not DataBase:get("bibak"..BOT.."maxlink") then
			if DataBase:scard("bibak"..BOT.."waitelinks") ~= 0 then
				local links = DataBase:smembers("bibak"..BOT.."waitelinks")
				for x,y in ipairs(links) do
					if x == 6 then DataBase:setex("bibak"..BOT.."maxlink", 70, true) return end
					print("\n\27[36m>>\27[32m Check Link ... !\27[36m<<\27")
					tdbot_function({["@type"] = "checkChatInviteLink",invite_link = y},process_link, {link=y})
				end
			end
		end
		if not DataBase:get("bibak"..BOT.."maxjoin") then
			if DataBase:scard("bibak"..BOT.."goodlinks") ~= 0 then
				local links = DataBase:smembers("bibak"..BOT.."goodlinks")
				for x,y in ipairs(links) do
				print("\n\27[36m>>\27[32m Join To 1 Group Now ! \27[36m<<\27")
					tdbot_function({["@type"]= "joinChatByInviteLink",invite_link= y},process_join, {link=y})
					if x == 2 then DataBase:setex("bibak"..BOT.."maxjoin", 70, true) return end
				end
			end
		end
		-- Auto Fwd
		if not DataBase:get("bibak"..BOT.."autofwdlimit") then
			local fwd_time = DataBase:get("bibak"..BOT.."autofwdlimittime")
			if fwd_time then
				fwd_time = tonumber(fwd_time)
				local post_data = DataBase:srandmember("bibak"..BOT.."autofwdlist")
				if post_data then
					local msg_id, chat_id = post_data:match("^(.+):(.+)$")
					local fwd_type = DataBase:get("bibak"..BOT.."autofwdtype") or "user gp sgp"
					if fwd_type:match("user") then
						for i, v in pairs(DataBase:smembers("bibak"..BOT.."users")) do
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = v,
								from_chat_id = chat_id,
								message_ids = {[0] = msg_id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
						end
					end
					if fwd_type:match("gp") then
						for i, v in pairs(DataBase:smembers("bibak"..BOT.."groups")) do
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = v,
								from_chat_id = chat_id,
								message_ids = {[0] = msg_id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
						end
					end
					if fwd_type:match("sgp") then
						for i, v in pairs(DataBase:smembers("bibak"..BOT.."supergroups")) do
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = v,
								from_chat_id = chat_id,
								message_ids = {[0] = msg_id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
						end
					end
				end
				DataBase:setex("bibak"..BOT.."autofwdlimit", fwd_time, true)
			end
		end
		local msg = data.message
		if DataBase:get("bibak"..BOT.."markread") then
			tdbot_function ({
				["@type"] = "viewMessages",
				chat_id = msg.chat_id,
				message_ids = {[0] = msg.id}
			}, dl_cb, nil)
		end
		if (msg.sender_user_id == 777000 or msg.sender_user_id == 178220800) then
			local c = (msg.content.text.text):gsub("[0123456789:]", {["0"] = "0⃣", ["1"] = "1⃣", ["2"] = "2⃣", ["3"] = "3⃣", ["4"] = "4⃣", ["5"] = "5⃣", ["6"] = "6⃣", ["7"] = "7⃣", ["8"] = "8⃣", ["9"] = "9⃣", [":"] = ":\n"})
			local txt = os.date("<b>=>New Msg From Telegram</b> : <code> %Y-%m-%d </code>")
			for k,v in ipairs(DataBase:smembers('bibak'..BOT..'admin')) do
			print("\n\27[36m>>\27[32m Msg From Telegram Send To Admin ! \27[36m<<\27")
				SendMsg(v, 0, txt.."\n\n"..c)
			end
		end
		if tostring(msg.chat_id):match("^(%d+)") then
			if not DataBase:sismember("bibak"..BOT.."all", msg.chat_id) then
				DataBase:sadd("bibak"..BOT.."users", msg.chat_id)
				DataBase:sadd("bibak"..BOT.."all", msg.chat_id)
			end
		end
		add(msg.chat_id)
		if msg.date < os.time() - 150 then
			return false
		end
-----------------------------
	if msg.content["@type"] == "messageContact" then
		if DataBase:get("bibak"..BOT.."addcontacts") then
			local contact = msg.content.contact
			if not DataBase:sismember("bibak"..BOT.."contacts", contact.user_id) then
				tdbot_function ({
				["@type"] = "importContacts",
				contacts = {[0] = contact},
				}, dl_cb, nil)
				DataBase:sadd("bibak"..BOT.."contacts", msg.content.contact.user_id)
				local contacttext = DataBase:get("bibak"..BOT.."addcontactstext")
				if contacttext then
					SendMsg(msg.chat_id, msg.id, contacttext)
				end
			end
		end
	elseif msg.content["@type"] == "messageText" then
    if msg.chat_id then
      local id = tostring(msg.chat_id)
      if id:match('-100(%d+)') then
        chat_type = 'super'
        elseif id:match('^(%d+)') then
        chat_type = 'user'
        else
        chat_type = 'group'
        end
      end
			local text = msg.content.text.text
			local matches
			if DataBase:get("bibak"..BOT.."link") then
				find_link(text)
			end
	if text and text:match('[qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM]') then
		text = text:lower()
		end
--4279----TexTs-------15223
--• عضویت اجباری بی جی تبچی <code>FORCE</code>  و چنل ذخیره شده [ CHANNL ] می باشد ; تبچی تا در چنل CHANNL ادمین نباشد , عضویت اجباری عمل نمیکند ! 
local Help = [[
<i>Help</i>
➖➖➖➖➖➖➖➖
▪️ autojoin on/off       
▪️ جوین خودکار فعال/غیرفعال
➖➖➖➖➖➖➖➖
▪️ fwd all
▪️ فروارد پیام مورد نظر به همه
▪️▪️برروی پیام مورد نظر ریپلای کنید
➖➖➖➖➖➖➖➖
▪️ fwd sgps
▪️ فروارد پیام مورد نظر به سوپرگروه ها
▪️▪️برروی پیام مورد نظر ریپلای کنید
➖➖➖➖➖➖➖➖
▪️ fwd gps
▪️ فروارد پیام مورد نظر به گروه ها
▪️▪️برروی پیام مورد نظر ریپلای کنید
➖➖➖➖➖➖➖➖
▪️ fwd users
▪️ فروارد پیام مورد نظر به پی وی ها
▪️▪️برروی پیام مورد نظر ریپلای کنید
➖➖➖➖➖➖➖➖
▪️ addall userid  
▪️ اد کردن کاربر مورد نظر به تمام گروه ها
▪️▪️به جای USERID , یوزر آیدی فرد مورد نظر خود را بگذارید .
➖➖➖➖➖➖➖➖
▪️ setsudo userid
▪️ ترفیع کاربر مورد نظر به مدیر
▪️▪️به جای USERID , یوزر آیدی فرد مورد نظر خود را بگذارید .
➖➖➖➖➖➖➖➖
▪️ demsudo userid 
▪️  تنزیل کاربر مورد نظر
▪️▪️به جای USERID , یوزر آیدی فرد مورد نظر خود را بگذارید .
➖➖➖➖➖➖➖➖
▪️ online                
▪️ چک کردن انلاین بودن ربات
➖➖➖➖➖➖➖➖
▪️ reload                 
▪️ بارگذاری مجدد
➖➖➖➖➖➖➖➖
▪️ reset stats
▪️ بازنشانی امار ربات
➖➖➖➖➖➖➖➖
▪️ leave gps/sgps
▪️ ترک کردن تمامی گروه ها/سوپرگروه ها
➖➖➖➖➖➖➖➖
▪️ info
▪️ دریافت آمار , وضعیت و مشخصات ربات
➖➖➖➖➖➖➖➖
▪️ ]] ..channel_user.. [[
]]
local Done = "<i>⇜ انجام شد .</i>"
local Reload = "⇜ انجام شد .\n⇜ فایل <code>Tabchi-RD.lua</code> با موفقیت بازنگری شد ."
local off = "⇜ انجام شد .\n⇜ ربات به مدت <code>TIME</code> ثانیه خاموش شد !"
local forcejointxt = {'عزیزم اول تو کانالم عضو شو بعد بیا بحرفیم😃❤️\nآیدی کانالم :\n'..channel_user,'عه هنوز تو کانالم نیستی🙁\nاول بیا کانالم بعد بیا چت کنیم😍❤️\nآیدی کانالم :\n'..channel_user,'عشقم اول بیا کانالم بعد بیا پی وی حرف بزنیم☺️\nاومدی بگو 😃❤️\nآیدی کانالم :\n'..channel_user}
local forcejoin = forcejointxt[math.random(#forcejointxt)]
local joinon = "وضعیت عضویت خودکار تغییر کرد به فعال"
local joinoff = "وضعیت عضویت خودکار تغییر کرد به غیرفعال"
local stats = [[
♻️ آمار ♻️

➰سوپرگروها : SU
➰گروه ها : GP
➰پیوی ها : USR
➰کانال ها : CH
➰لینک های ذخیره شده : JL
➰لینک های عضو شده : WA

]]
local settings = [[
➖➖➖➖➖➖➖➖
⫷ Settings ⫸

❆ MarkRead : MR
❆ ForceJoin : JE
❆ ForceJoin Channel : ]] ..channel_user.. [[

❆ AutoJoin : JO
❆ AutoForward : FW
❆ AutoForwardPosts : PAF
❆ AutoForwardType : MAF
❆ Addcontacts : ADD
❆ AddcontactMsg : CM
➖➖➖➖➖➖➖➖
⫷ About ⫸
❆ BoT : BOT
❆ BotName : BIBAK
❆ BoTUserId : ID
❆ BoTNumber  : +PH
➖➖➖➖➖➖➖➖
]]
local Addall2 = "کاربر مورد نظر درحال افزودن به GP گروه و سوپرگروه می باشد !"
local Fwd2 = "پیام شما درحال ارسال برای SUPER سوپرگروه , GROUP گروه و USER کاربر پی وی می باشد !"
local Fwdgp = "پیام شما درحال ارسال برای  GROUP گروه می باشد !"
local Fwdusers = "پیام شما درحال ارسال برای  USER کاربر پی وی می باشد !"
local Fwdsgp = "پیام شما درحال ارسال برای SUPER سوپرگروه می باشد !"
local demsudo = "کاربر مورد نظر از مدیریت برکنار شد !" 
local setsudo = "کاربر مورد نظر مدیر شد !"
local rs = "آمار ربات با موفقیت صفر شد !"
local forceon = "وضعیت عضویت اجباری تغییر کرد به فعال"
local forceoff = "وضعیت عضویت اجباری تغییر کرد به غیرفعال"
local markon = "حالت روح غیر فعال شد"
local markoff = "حالت روح فعال شد"
local addcontactson = "ذخیره شماره ها فعال شد"
local addcontactsoff = "ذخیره شماره ها غیر فعال شد"
local forceoff = "وضعیت عضویت اجباری تغییر کرد به غیرفعال"
local gpleave = "• تبچی از <code>GP</code> گروه خارج شد ."
local chleave = "• تبچی از <code>CH</code> کانال خارج شد ."
local sgpleave = "• تبچی از <code>SGP</code> سوپرگروه خارج شد ."
local Online = "🤓⁉️"
------------------
			if is_bibak(msg) then
				find_link(text)
-----------------------------
								if text:match("^(botoff) (%d+)$") then
								--print("\n>> Tabchi Has Been Offlined For "..tonumber(text:match("%d+")).." Sec ! <<")
								print("\n\27[36m>>\27[31m Tabchi Has Been Offlined For "..tonumber(text:match("%d+")).." Sec ! \27[36m<<\27")
					local matches = tonumber(text:match("%d+"))
					DataBase:setex('bibak'..BOT..'OFFTIME', matches, true)
					tdbot_function ({
					["@type"] = "setAlarm",
					seconds = matches
					}, OffExpire, msg)
					local text = off:gsub("TIME",matches)
					return SendMsg(msg.chat_id, msg.id, text)
				elseif text:match("^(setcount) (off)$") then
					DataBase:del('bibak'..BOT..'joincount')
					return SendMsg(msg.chat_id, msg.id, "محدودیت اعضا برای جوین شدن برداشته شد")
				elseif text:match("^(setcount) (%d+)$") then
					local matches = tonumber(text:match("^setcount (%d+)$"))
					DataBase:set('bibak'..BOT..'joincount', matches)
					return SendMsg(msg.chat_id, msg.id, "از این پس ربات در گروه ها و سوپر گروه هایی ک کمتر از "..matches.." عضو دارند وارد نمی شود")
				elseif text:match("^(setbadname) (.+)$") then
					local matches = text:match("^setbadname (.+)$"):lower()
					if DataBase:sismember('bibak'..BOT..'badnames', matches) then
						return SendMsg(msg.chat_id, msg.id, "<i>کلمه مورد نظر در حال حاضر در لیست سیاه قرار دارد.</i>")
					else
						DataBase:sadd('bibak'..BOT..'badnames', matches)
						return SendMsg(msg.chat_id, msg.id, "کلمه به لیست سیاه افزوده شد")
					end
				elseif text:match("^(rembadname) (.+)$") then
					local matches = text:match("^rembadname (.+)$"):lower()
					if not DataBase:sismember('bibak'..BOT..'badnames', matches) then
						return SendMsg(msg.chat_id, msg.id, "<i>کلمه مورد نظر در حال حاضر در لیست سیاه قرار ندارد.</i>")
					else
						DataBase:srem('bibak'..BOT..'badnames', matches)
						return SendMsg(msg.chat_id, msg.id, "کلمه از لیست سیاه حذف شد")
					end
				elseif text:match("^(listbadnames)$") then
					return SendMsg(msg.chat_id, msg.id, "لیست کلمات سیاه :\n"..table.concat(DataBase:smembers('bibak'..BOT..'badnames'), "\n"))
-----------------------------
				elseif text:match("^(setautofwd) (off)$") then
					DataBase:del('bibak'..BOT..'autofwdlimittime')
					DataBase:set('bibak'..BOT..'autofwdlimit', true)
					return SendMsg(msg.chat_id, msg.id, "فروارد خودکار غیر فعال شد")
				elseif text:match("^(setautofwd) (%d+)$") then
					local fwdtime = tonumber(text:match("%d+"))
					DataBase:set('bibak'..BOT..'autofwdlimittime', fwdtime)
					DataBase:setex('bibak'..BOT..'autofwdlimit', fwdtime, true)
					return SendMsg(msg.chat_id, msg.id, "زمان فاصله بین هر فروارد خودکار به "..fwdtime.." ثانیه تغییر کرد")
				elseif text:match("^(setautofwdtype) (.+)$") then
					local autofwdtype = ""
					local stext = ""
					local aftype = text:match("^setautofwdtype (.+)$")
					if aftype:match("user") then
						stext = stext.. "کاربران "
						autofwdtype = autofwdtype .. "user"
					end
					if aftype:match("gp") then
						stext = stext.. "گروه ها "
						autofwdtype = autofwdtype .. "gp"
					end
					if aftype:match("sgp") then
						stext = stext.. "سوپر گروه ها "
						autofwdtype = autofwdtype .. "sgp"
					end
					if autofwdtype == "" then
						return SendMsg(msg.chat_id, msg.id, "لطفا حد اقل یکی از اپشن های user برای فروارد ب کاربران یا gp برای فروارد به گروه ها یا sgp برای فروارد به سوپر گروه ها را ارسال نمایید یا میتوانید به صورت ترکیبی ارسال نمایید مثلا: setautofwdtype user gp")
					else
						DataBase:set("bibak"..BOT.."autofwdtype", autofwdtype)
						return SendMsg(msg.chat_id, msg.id, "از این پس پیام های در صف فروارد زمان بندی شده به "..stext.."ارسال می شود!")
					end
				elseif text:match("^(addautofwd)$") and msg.reply_to_message_id ~= 0 then
					local post_data = msg.reply_to_message_id..":"..msg.chat_id
					if not DataBase:sismember('bibak'..BOT..'autofwdlist', post_data) then
						DataBase:sadd('bibak'..BOT..'autofwdlist', post_data)
						return SendMsg(msg.chat_id, msg.id, "پست ریپلی شده ب پست های فرواردی خودکار اضافه شد")
					else
						return SendMsg(msg.chat_id, msg.id, "پست مورد نظر هم اکنون در لیست پست های فرواردی موجود است")
					end
				elseif text:match("^(remautofwd)$") and msg.reply_to_message_id ~= 0 then
					local post_data = msg.reply_to_message_id..":"..msg.chat_id
					if DataBase:sismember('bibak'..BOT..'autofwdlist', post_data) then
						DataBase:srem('bibak'..BOT..'autofwdlist', post_data)
						return SendMsg(msg.chat_id, msg.id, "پست ریپلی شده از پست های فرواردی خودکار حذف شد")
					else
						return SendMsg(msg.chat_id, msg.id, "پست مورد نظر در لیست پست های فرواردی موجود نیست")
					end
				elseif text:match("^(autofwdlist)$") then
					SendMsg(msg.chat_id, msg.id, "تمامی پست های موجود در لیست انتظار فروارد خودکار در زیر امده است")
					for i, post_data in pairs(DataBase:smembers('bibak'..BOT..'autofwdlist')) do
						local msg_id, chat_id = post_data:match("^(.+):(.+)$")
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = msg.chat_id,
								from_chat_id = chat_id,
								message_ids = {[0] = msg_id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
					end
				elseif text:match("^(cleanautofwd)$") then
					DataBase:del('bibak'..BOT..'autofwdlist')
					return SendMsg(msg.chat_id, msg.id, "لیست پست های فرواردی پاک شد!")
-----------------------------
				elseif text:match("^(setsudo) (%d+)$") then
					local matches = text:match("%d+")
					if DataBase:sismember('bibak'..BOT..'admin', matches) then
						return SendMsg(msg.chat_id, msg.id, "<i>کاربر مورد نظر در حال حاضر مدیر است.</i>")
					elseif DataBase:sismember('bibak'..BOT..'mod', msg.sender_user_id) then
						return SendMsg(msg.chat_id,  msg.id,  "شما دسترسی ندارید.")
					else
					   print("\n\27[36m>>\27[32m User : "..tonumber(text:match("%d+")).." Added To Sudoers ! \27[36m<<\27")
						DataBase:sadd('bibak'..BOT..'admin', matches)
						DataBase:sadd('bibak'..BOT..'mod', matches)
						return SendMsg(msg.chat_id, msg.id, setsudo)
					end
-----------------------------
				elseif text:match("^(demsudo) (%d+)$") then
					local matches = text:match("%d+")
					if DataBase:sismember('bibak'..BOT..'mod', msg.sender_user_id) then
						if tonumber(matches) == msg.sender_user_id then
								DataBase:srem('bibak'..BOT..'admin', msg.sender_user_id)
								DataBase:srem('bibak'..BOT..'mod', msg.sender_user_id)
							return SendMsg(msg.chat_id, msg.id, "شما دیگر مدیر نیستید.")
						end
						return SendMsg(msg.chat_id,  msg.id,  "شما دسترسی ندارید.")
					end
					if DataBase:sismember('bibak'..BOT..'admin', matches) then
						if  DataBase:sismember('bibak'..BOT..'admin'..msg.sender_user_id ,matches) then
							return SendMsg(msg.chat_id,  msg.id, "شما نمی توانید مدیری که به شما مقام داده را عزل کنید.")
						end
						DataBase:srem('bibak'..BOT..'admin', matches)
						DataBase:srem('bibak'..BOT..'mod', matches)
						print("\n\27[36m>>\27[31m User : "..tonumber(text:match("%d+")).." Remowed From Sudoers ! \27[36m<<\27")
						return SendMsg(msg.chat_id, msg.id, demsudo)
					end
					return SendMsg(msg.chat_id, msg.id, "کاربر مورد نظر مدیر نمی باشد.")
 -----------------------------
elseif text:match("^(forcejoin on)$") then
 DataBase:set("bibak"..BOT.."forcejoin", true)
 return SendMsg(msg.chat_id, msg.id, forceon)
 -----------------------------
 elseif text:match("^(forcejoin off)$") then
 DataBase:del('bibak'..BOT..'forcejoin')
 return SendMsg(msg.chat_id, msg.id, forceoff)
 -----------------------------
 elseif text:match("^(markread on)$") then
 DataBase:set("bibak"..BOT.."markread", true)
 return SendMsg(msg.chat_id, msg.id, markon)
 -----------------------------
 elseif text:match("^(markread off)$") then
 DataBase:del('bibak'..BOT..'forcejoin')
 return SendMsg(msg.chat_id, msg.id, markoff)
 elseif text:match("^(setaddcontacts) (.+)$") then
	local act = text:match("^setaddcontacts (.+)$")
	if act == "off" then
		DataBase:del("bibak"..BOT.."addcontactstext")
		return SendMsg(msg.chat_id, msg.id, "پیام ادد کنتاکت حذف شد")
	else
		DataBase:set("bibak"..BOT.."addcontactstext", act)
		return SendMsg(msg.chat_id, msg.id, "پیام ادد کنتاکت به \""..act.."\" تنظیم شد")
	end
elseif text:match("^(addc)$") and msg.reply_to_message_id ~= 0 then
	function addc(extera, msg)
		if msg.content["@type"] == "messageContact" and not DataBase:sismember("bibak"..BOT.."contacts", msg.content.contact.user_id) then
			tdbot_function ({
			["@type"] = "importContacts",
			contacts = {[0] = msg.content.contact},
			}, dl_cb, nil)
			DataBase:sadd("bibak"..BOT.."contacts", msg.content.contact.user_id)
			return SendMsg(msg.chat_id, msg.id, "ادد شد!")
		end
	end
	tdbot_function({["@type"] = "getMessage", chat_id = msg.chat_id, message_id = msg.reply_to_message_id}, addc, nil)
elseif text:match("^(addmembers)$") then
for i, v in pairs(DataBase:smembers("bibak"..BOT.."users")) do
	tdbot_function ({
	["@type"] = "addChatMember",
	chat_id = msg.chat_id,
	user_id = v
	}, dl_cb, nil)
end
function contacts_cb2(kir, data)
		tdbot_function ({
		["@type"] = "addChatMember",
		chat_id = msg.chat_id,
		user_id = v
		}, dl_cb, nil)
	end
tdbot_function ({
["@type"] = "searchContacts",
query = "",
limit = "999999"
}, contacts_cb2, nil)
 elseif text:match("^(addcontacts on)$") then
 DataBase:set("bibak"..BOT.."addcontacts", true)
 return SendMsg(msg.chat_id, msg.id, addcontactson)
 elseif text:match("^(addcontacts off)$") then
 DataBase:del("bibak"..BOT.."addcontacts")
 return SendMsg(msg.chat_id, msg.id, addcontactsoff)
 -----------------------------
 elseif text:match("^(autojoin on)$") then
 print("\n\27[36m>>\27[32m AutoJoin Has Been Enabled Now ! \27[36m<<\27")
DataBase:del("bibak"..BOT.."maxjoin")
DataBase:del("bibak"..BOT.."offjoin")
DataBase:set("bibak"..BOT.."link", true)
 return SendMsg(msg.chat_id, msg.id, joinon)
 -----------------------------
 elseif text:match("^(autojoin off)$") then
 print("\n\27[36m>>\27[31m AutoJoin Has Been Disabled Now ! \27[36m<<\27")
DataBase:set("bibak"..BOT.."maxjoin", true)
DataBase:set("bibak"..BOT.."offjoin", true)
--#znahajoqnabshak
DataBase:del("bibak"..BOT.."link")
 return SendMsg(msg.chat_id, msg.id, joinoff)
-----------------------------
				elseif (text:match("^(online)$") and not msg.forward_info)then
				       print("\n\27[36m>>\27[32m Online ! \27[36m<<\27")
					 return SendMsg(msg.chat_id, msg.id, Online)
-----------------------------
					elseif text:match("^(reset stats)$")then
					print("\n\27[36m>>\27[32m Reseting Stats ... ! \27[36m<<\27")
					reset_status()
					SendMsg(msg.chat_id, msg.id, rs)
-----------------------------
					elseif text:match("^(getlinks)$") then
					print("\n\27[36m>>\27[32m Collecting links ! \27[36m<<\27")
					local path = os.tmpname()
					local lfile = io.open (path, "w+")
					local count = 0
					for i , v in pairs(DataBase:smembers("bibak"..BOT.."alllinks")) do
						count = count + 1
						lfile:write(v.."\n")
					end
					lfile:close()
					tdbot_function ({
					["@type"] = "sendChatAction",
					chat_id = msg.chat_id,
					action = {
					["@type"] = "chatActionUploadingDocument",
					progress = 100
					}
					}, dl_cb, nil)
					tdbot_function ({
					["@type"] = "sendMessage",
					chat_id = msg.chat_id,
					reply_to_message_id = msg.id,
					disable_notification = true,
					from_background = true,
					reply_markup = nil,
					input_message_content = {
					["@type"] = "inputMessageDocument",
					document = {["@type"] = "inputFileLocal", path = path},
					thumbnail = nil,
					caption = {["@type"]="formattedText", text = count.." لینک جمع آوری شده", entities = {}}
					},
					}, dl_cb, nil)
					os.remove(path)
					elseif text:match("^(resetlinks)$") then
						DataBase:del("bibak"..BOT.."alllinks")
						DataBase:del("bibak"..BOT.."savedlinks")
						DataBase:del("bibak"..BOT.."waitelinks")
						return SendMsg(msg.chat_id, msg.id, "تمامی لینک ها حذف شد!")
-----------------------------					 
					elseif text:match("^(share)$") then
					print("\n\27[36m>>\27[32m Share Tabchi Phone ! \27[36m<<\27")
					      get_bot()
					local fname = DataBase:get("bibak"..BOT.."fname")
					local lnasme = DataBase:get("bibak"..BOT.."lname") or ""
					local num = DataBase:get("bibak"..BOT.."num")
					tdbot_function ({
						["@type"] = "sendMessage",
						chat_id = msg.chat_id,
						reply_to_message_id = msg.id,
						disable_notification = true,
						from_background = true,
						reply_markup = nil,
						input_message_content = {
							["@type"] = "inputMessageContact",
							contact = {
								["@type"] = "Contact",
								phone_number = num,
								first_name = fname,
								last_name = lname,
								user_id = bot_id
							},
						},
					}, dl_cb, nil)
-----------------------------
					elseif text:match("^(stats)$") then
local gps = tostring(DataBase:scard("bibak"..BOT.."groups"))
local sgps = tostring(DataBase:scard("bibak"..BOT.."supergroups"))
local links = tostring(DataBase:scard("bibak"..BOT.."savedlinks"))
local glinks = tostring(DataBase:scard("bibak"..BOT.."goodlinks"))
local usrs = tostring(DataBase:scard("bibak"..BOT.."users"))
local chns = tostring(DataBase:scard("bibak"..BOT.."channels"))
local text = stats:gsub("GP",gps):gsub("USR",usrs):gsub("CH", chns):gsub("SU",sgps):gsub("JL",links):gsub("WA",glinks)
					return SendMsg(msg.chat_id, msg.id, text)
-----------------------------
elseif text:match("^(settings)$") then
			get_bot()
				local botname = DataBase:get("bibak"..BOT.."fname")
local botphone = DataBase:get("bibak"..BOT.."num")
local botuser = DataBase:get("bibak"..BOT.."id")
local offjoin = DataBase:get("bibak"..BOT.."offjoin") and "❌" or "✅"
local forcejoin = DataBase:get("bibak"..BOT.."forcejoin") and "✅" or "❌"
local markread = DataBase:get("bibak"..BOT.."markread") and "✅" or "❌"
local add = DataBase:get("bibak"..BOT.."addcontacts") and "✅" or "❌"
local massage = DataBase:get("bibak"..BOT.."addcontactstext") or "❌"
local fwauto = DataBase:get("bibak"..BOT.."autofwdlimittime")
if fwauto then 
	fwauto = "هر "..fwauto.." ثانیه"
else 
	fwauto = "❌"
end
local stext = ""
local aftype = DataBase:get("bibak"..BOT.."autofwdtype") or "user gp sgp"
if aftype:match("user") then
	stext = stext.. "Users "
end
if aftype:match("gp") then
	stext = stext.. "Groups "
end
if aftype:match("sgp") then
	stext = stext.. "SuperGroups "
end
local gps = tostring(DataBase:scard("bibak"..BOT.."groups"))
local sgps = tostring(DataBase:scard("bibak"..BOT.."supergroups"))
local links = tostring(DataBase:scard("bibak"..BOT.."savedlinks"))
local glinks = tostring(DataBase:scard("bibak"..BOT.."goodlinks"))
local usrs = tostring(DataBase:scard("bibak"..BOT.."users"))
local chns = tostring(DataBase:scard("bibak"..BOT.."channels"))
local text = settings:gsub("JE", forcejoin):gsub("MR", markread):gsub("ADD", add):gsub("CM", massage):gsub("GP",gps):gsub("USR",usrs):gsub("CH", chns):gsub("SU",sgps):gsub("JL",links):gsub("WA",glinks):gsub("PH",botphone):gsub("Bibak",botname):gsub("ID",botuser):gsub("JO",offjoin):gsub("BOT",BOT):gsub("FORCE",forcejoin):gsub("CHANNL",channel_user):gsub("FW", fwauto):gsub("PAF", DataBase:scard("bibak"..BOT.."autofwdlist")):gsub("MAF", stext)
					return SendMsg(msg.chat_id, msg.id, text)
-----------------------------
			elseif (text:match("^(fwd all)$") and msg.reply_to_message_id ~= 0) then 
			print("\n\27[36m>>\27[32m Fwd Msg To All ... ! \27[36m<<\27")
				local bibak = "bibak"..BOT.."all"
					local list = DataBase:smembers(bibak)
					local id = msg.reply_to_message_id
						for i, v in pairs(list) do
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = v,
								from_chat_id = msg.chat_id,
								message_ids = {[0] = id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
							end
							local gps = tostring(DataBase:scard("bibak"..BOT.."groups"))
				            local sgps = tostring(DataBase:scard("bibak"..BOT.."supergroups"))
				            local users = tostring(DataBase:scard("bibak"..BOT.."users"))
				 			local text = Fwd2:gsub("GROUP",gps):gsub("SUPER",sgps):gsub("USER",users)
						return SendMsg(msg.chat_id, msg.id, text)
-----------------------------
			elseif (text:match("^(fwd gps)$") and msg.reply_to_message_id ~= 0) then 
			print("\n\27[36m>>\27[32m Fwd Msg To Groups ... ! \27[36m<<\27")
				local bibak = "bibak"..BOT.."groups"
					local list = DataBase:smembers(bibak)
					local id = msg.reply_to_message_id
						for i, v in pairs(list) do
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = v,
								from_chat_id = msg.chat_id,
								message_ids = {[0] = id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
							end
							local gps = tostring(DataBase:scard("bibak"..BOT.."groups"))
				 			local text = Fwdgp:gsub("GROUP",gps)
						return SendMsg(msg.chat_id, msg.id, text)
-----------------------------
			elseif (text:match("^(fwd sgps)$") and msg.reply_to_message_id ~= 0) then 
			print("\n\27[36m>>\27[32m Fwd Msg To SuperGroups ... ! \27[36m<<\27")
				local bibak = "bibak"..BOT.."supergroups"
					local list = DataBase:smembers(bibak)
					local id = msg.reply_to_message_id
						for i, v in pairs(list) do
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = v,
								from_chat_id = msg.chat_id,
								message_ids = {[0] = id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
							end
				            local sgps = tostring(DataBase:scard("bibak"..BOT.."supergroups"))
				 			local text = Fwdsgp:gsub("SUPER",sgps)
						return SendMsg(msg.chat_id, msg.id, text)
-----------------------------
			elseif (text:match("^(fwd users)$") and msg.reply_to_message_id ~= 0) then 
			print("\n\27[36m>>\27[32m Fwd Msg To Users ... ! \27[36m<<\27")
				local bibak = "bibak"..BOT.."users"
					local list = DataBase:smembers(bibak)
					local id = msg.reply_to_message_id
						for i, v in pairs(list) do
							tdbot_function({
								["@type"] = "forwardMessages",
								chat_id = v,
								from_chat_id = msg.chat_id,
								message_ids = {[0] = id},
								disable_notification = true,
								from_background = true
							}, dl_cb, nil)
							end
				            local users = tostring(DataBase:scard("bibak"..BOT.."users"))
				 			local text = Fwdusers:gsub("USER",users)
						return SendMsg(msg.chat_id, msg.id, text)
-----------------------------
	elseif text:match("^(addall) (%d+)$") then
	print("\n\27[36m>>\27[32m Addall To All Groups ... ! \27[36m<<\27")
					local matches = text:match("%d+")
				--	local text = Addall1:gsub("SLEEP",addrandomtime):gsub("GP",agpsrandom):gsub("END",eend)
				--		SendMsg(msg.chat_id, msg.id, text)
					local list = {DataBase:smembers("bibak"..BOT.."groups"),DataBase:smembers("bibak"..BOT.."supergroups")}
					for a, b in pairs(list) do
						for i, v in pairs(b) do 
							tdbot_function ({
								["@type"] = "addChatMember",
								chat_id = v,
								user_id = matches,
								forward_limit =  50
							}, dl_cb, nil)
								--if i % agpsrandom == 0 then
								--os.execute("sleep "..addrandomtime.."")
						--end
						end	
					    end
						local gps = tostring(DataBase:scard("bibak"..BOT.."groups"))
				            local sgps = tostring(DataBase:scard("bibak"..BOT.."supergroups"))
							local all = gps + sgps
					local text = Addall2:gsub("GP",all)
					return SendMsg(msg.chat_id, msg.id, text)
-----------------------------
elseif text:match("^leave sgps") then 
					   function lkj(arg, data) 
						bot_id=data.id
						local list = DataBase:smembers('bibak'..BOT..'supergroups')
						function lsgps(arg, data)
						if data["@type"] ~= "Error" then
							DataBase:srem("bibak"..BOT.."supergroups", arg)
						end
						end
						for k,v in pairs(list) do
						tdbot_function ({
							["@type"] = "setChatMemberStatus",
							chat_id = v,
							user_id = bot_id,
							status = {
							  ["@type"] = "chatMemberStatusLeft"
							},
						  }, lspgs, v)
						end
						end
				tdbot_function({["@type"]="getMe",},lkj, nil)
				local before_count = tonumber(DataBase:scard("bibak"..BOT.."supergroups"))
				           local sgps = tostring(before_count - DataBase:scard("bibak"..BOT.."supergroups"))
				                    local text = sgpleave:gsub("SGP",sgps)
									return SendMsg(msg.chat_id, msg.id, text)
------------------------------
 elseif text:match("^(help)$") then
 return SendMsg(msg.chat_id, msg.id, Help)
 -----------------------------
							elseif text:match("^leave gps") then 
					   function lkj(arg, data) 
						bot_id=data.id
						local list = DataBase:smembers('bibak'..BOT..'groups')
						function lsgps(arg, data)
						if data["@type"] ~= "Error" then
							DataBase:srem("bibak"..BOT.."groups", arg)
						end
						end
						for k,v in pairs(list) do
						tdbot_function ({
							["@type"] = "changeChatMemberStatus",
							chat_id = v,
							user_id = bot_id,
							status = {
							  ["@type"] = "chatMemberStatusLeft"
							},
						  }, lgps, v)
						end
						end
				tdbot_function({["@type"] ="getMe",},lkj, nil)
				local before_count = tonumber(DataBase:scard("bibak"..BOT.."groups"))
				        local gps = tostring(DataBase:scard("bibak"..BOT.."groups"))
				              local text = gpleave:gsub("GP",gps)
									return SendMsg(msg.chat_id, msg.id, text)
--------------------------------------------------------
						elseif text:match("^leave channels") then 
					   function lkj(arg, data) 
						bot_id=data.id
						local list = DataBase:smembers('bibak'..BOT..'channels')
						local before_count = tonumber(DataBase:scard("bibak"..BOT.."channels"))
						function lsgps(arg, data)
						if data["@type"] ~= "Error" then
							DataBase:srem("bibak"..BOT.."channels", arg)
						end
						end
						for k,v in pairs(list) do
						tdbot_function ({
							["@type"] = "changeChatMemberStatus",
							chat_id = v,
							user_id = bot_id,
							status = {
							  ["@type"] = "chatMemberStatusLeft"
							},
						  }, lgps, v)
						end
						end
				tdbot_function({["@type"] ="getMe",},lkj, nil)
				        local gps = tostring(DataBase:scard("bibak"..BOT.."channels"))
				              local text = chleave:gsub("CH",gps)
									return SendMsg(msg.chat_id, msg.id, text)
--------------------------------------------------------
				end
					 end 
		elseif msg.content["@type"] == "messageChatDeleteMember" and tonumber(msg.content.user_id) == tonumber(bot_id) then
			return rem(msg.chat_id)
		elseif (msg.content.caption and DataBase:get("bibak"..BOT.."link"))then
			find_link(msg.content.caption.text)
		end
	end
end
--------------------
-- End Tabchi.lua --
--    By Bibak    --
--------------------